#Задача 1 про Дерево решения.
#Рассматривается проект покупки доли (пакета акций) в инвестиционном проекте. Пакет стоит 7 млн., 
#и по завершению проект принесет доход 12 млн. с вероятностью 0,6 или ничего с вероятностью 0,4.
#При этом через некоторое время будет опубликован прогноз аналитической фирмы относительно успеха этого проекта. 
#Прогноз верен с вероятностью 0,7, то есть, равны 0,7 условные вероятности. Однако, в случае положительного прогноза пакет порождает до 10,6 млн., а в случае отрицательного подешевеет до 3,4 млн. 
#Требуется составить стратегию действий: покупать ли долю, или ждать прогноза, и совершать ли покупку при том или ином результате прогноза.


from sklearn.tree import DecisionTreeClassifier
import numpy as np

# Подготовка данных для обучения дерева решений
X = np.array([[0.7, 10_600_000], [0.3, 3_400_000]])  # Прогнозируемая вероятность и доход
y = np.array([1, 2])  # 1 - покупка при положительном прогнозе, 2 - покупка при отрицательном

# Обучение дерева решений
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X, y)

# Прогнозирование стратегии для заданных данных
прогноз_вероятность = 0.7  # Прогнозируемая вероятность успеха
прогноз_доход = 10_600_000  # Прогнозируемый доход при положительном прогнозе

решение = clf.predict([[прогноз_вероятность, прогноз_доход]])

# Вывод решения
if решение == 1:
    print("Рекомендуется покупать при положительном прогнозе.")
elif решение == 2:
    print("Рекомендуется покупать при отрицательном прогнозе.")
else:
    print("Рекомендуется не покупать.")
